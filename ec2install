#!/bin/bash

# check input arguments
if [ "$#" -ne 2 ]; then
    echo "Please specify cluster name and technology to install" && exit 1
fi

CLUSTER_NAME=$1
TECHNOLOGY=$2

if [ ! -d tmp/$CLUSTER_NAME ]; then
    echo "cluster does not exist! please run ec2fetch first." && exit 1
fi

MASTER_DNS=$(head -n 1 tmp/$CLUSTER_NAME/public_dns)
PEMLOC=tmp/$CLUSTER_NAME/*.pem

check_remote_folder () {
  ssh -i $PEMLOC ubuntu@$MASTER_DNS bash -c "'
    if [ -d $1 ]; then
      echo "installed"
    else
      echo "missing"
    fi
  '"
}

DEP_ROOT_FOLDER=/usr/local/

case $TECHNOLOGY in
  environment)
    echo "Setting up base environment packages on $CLUSTER_NAME"
    install/Environment/install_env_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  ssh)
    echo "Setting up passwordless SSH on $CLUSTER_NAME"
    config/SSH/setup_passwordless_ssh.sh $PEMLOC $CLUSTER_NAME
    ;;
  aws)
    echo "Passing AWS credentials to $CLUSTER_NAME"
    config/pass_aws_cred $PEMLOC $CLUSTER_NAME
    ;;
  hadoop)
    echo "Installing Hadoop on $CLUSTER_NAME"
    install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    config/Hadoop/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  hive)
    echo "Checking dependencies ..."
    DEP=hadoop
    INSTALLED=$(check_remote_folder $DEP_ROOT_FOLDER$DEP)
    if [ "$INSTALLED" = "installed" ]; then
      echo "Installing Hive on Master Node in $CLUSTER_NAME"
      install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
      config/Hive/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    else
      echo "$DEP is not installed in $DEP_ROOT_FOLDER"
      echo "Please install $DEP and then proceed with $TECHNOLOGY"
      echo "./ec2install $PEMLOC $CLUSTER_NAME $DEP"
      exit 1
    fi
    ;;
  pig)
    echo "Checking dependencies ..."
    DEP=hadoop
    INSTALLED=$(check_remote_folder $DEP_ROOT_FOLDER$DEP)
    if [ "$INSTALLED" = "installed" ]; then
      echo " Installing Pig on Master Node in $CLUSTER_NAME"
      install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    else
      echo "$DEP is not installed in $DEP_ROOT_FOLDER"
      echo "Please install $DEP and then proceed with $TECHNOLOGY"
      echo "./ec2install $PEMLOC $CLUSTER_NAME $DEP"
      exit 1
    fi
    ;;
  redis)
    echo "Installing Redis on $CLUSTER_NAME"
    install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    config/Redis/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  spark)
    echo "Installing Spark on $CLUSTER_NAME"
    install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    config/Spark/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  tachyon)
    echo "Installing Tachyon on $CLUSTER_NAME"
    install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    config/Tachyon/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  zookeeper)
    echo "Installing Zookeeper on $CLUSTER_NAME"
    install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    config/Zookeeper/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  hbase)
    echo "Checking dependencies ..."
    DEP=zookeeper
    INSTALLED=$(check_remote_folder $DEP_ROOT_FOLDER$DEP)
    if [ "$INSTALLED" = "installed" ]; then
      echo "Installing HBase on $CLUSTER_NAME"
      install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
      config/HBase/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    else
      echo "$DEP is not installed in $DEP_ROOT_FOLDER"
      echo "Please install $DEP and then proceed with $TECHNOLOGY"
      echo "./ec2install $PEMLOC $CLUSTER_NAME $DEP"
      exit 1
    fi
    ;;
  kafka)
    echo "Checking dependencies ..."
    DEP=zookeeper
    INSTALLED=$(check_remote_folder $DEP_ROOT_FOLDER$DEP)
    if [ "$INSTALLED" = "installed" ]; then
      echo "Installing Kafka on $CLUSTER_NAME"
      install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
      config/Kafka/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    else
      echo "$DEP is not installed in $DEP_ROOT_FOLDER"
      echo "Please install $DEP and then proceed with $TECHNOLOGY"
      echo "./ec2install $PEMLOC $CLUSTER_NAME $DEP"
      exit 1
    fi
    ;;
  elasticsearch)
    echo "Installing Elasticsearch on $CLUSTER_NAME"
    install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    config/Elasticsearch/setup_cluster.sh $PEMLOC $CLUSTER_NAME us-west-2 open
    ;;
  cassandra)
    echo "Installing Cassandra on $CLUSTER_NAME"
    install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
    config/Cassandra/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  kibana)
    echo "Checking dependencies ..."
    DEP=elasticsearch
    INSTALLED=$(check_remote_folder $DEP_ROOT_FOLDER$DEP)
    if [ "$INSTALLED" = "installed" ]; then
      echo "Installing Kibana on Master Node in $CLUSTER_NAME"
      install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
      config/Kibana/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    else
      echo "$DEP is not installed in $DEP_ROOT_FOLDER"
      echo "Please install $DEP and then proceed with $TECHNOLOGY"
      echo "./ec2install $PEMLOC $CLUSTER_NAME $DEP"
      exit 1
    fi
    ;;
  opscenter)
    echo "Checking dependencies ..."
    DEP=cassandra
    INSTALLED=$(check_remote_folder $DEP_ROOT_FOLDER$DEP)
    if [ "$INSTALLED" = "installed" ]; then
      echo "Installing Opscenter on Master Node in $CLUSTER_NAME"
      install/cluster_download $PEMLOC $CLUSTER_NAME $TECHNOLOGY
      config/Opscenter/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    else
      echo "$DEP is not installed in $DEP_ROOT_FOLDER"
      echo "Please install $DEP and then proceed with $TECHNOLOGY"
      echo "./ec2install $PEMLOC $CLUSTER_NAME $DEP"
      exit 1
    fi
    ;;
  zeppelin)
    echo "Installing Zeppelin on Master Node in $CLUSTER_NAME"
    install/Zeppelin/install_zeppelin_cluster.sh $PEMLOC $CLUSTER_NAME
    config/Zeppelin/setup_cluster.sh $PEMLOC $CLUSTER_NAME
    ;;
  *)
    echo "Invalid technology to install."; exit 1 ;;
esac

