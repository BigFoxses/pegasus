1) have user select which technologies to deploy
2) for each technology specify which nodes will contain the technology
    * specify master if needed
3) be able to show progress of installation
4) detect dependencies (make dependency graph for installation e.g. zookeeper -> kafka and zookeeper -> hbase)


Create a dictionary of dependencies for each technology
dependencies = {"Zookeer": None,
                "Kafka": "Zookeeper",
                "HBase": "Zookeeper",
                "Storm": "Zookeeper",
                "Hadoop": None,
                "Spark": "Hadoop",
                "Hive": "Hadoop",
                "Pig": "Hadoop",
                "Presto": "Hive",
                "Elasticsearch": None,
                "Kibana": "Elasticsearch"
                "Redis": None
                "Cassandra": None}

1) Loop through dictionary of chosen technologies which map to public DNS and hostnames for the specified tech
2) Check if dependency is installed
    None - continue with installation
     Yes - continue with installation
      No - check if dependency of dependency is installed

    Check if technology is installed in /usr/local

def is_installed(pem_key_location, public_dns, tech_name):
    bash_cmd = "ssh -i {} ubuntu@{} 'ls /usr/local | grep ^{}$'".format(pem_key_loacation, public_dns, tech_name)
    result = os.system(bash_cmd)

    return result == 0

def install_dependency(pem_key_location, public_dns, tech_name):
    if dependencies[tech_name] is None or is_installed(pem_key_location, public_dns, dependencies[tech_name]):
        # install technology
    else:
        if is_installed(pem_key_location, public_dns, tech_name):
            return
        else:
            if is_installed(pem_key_location, public_dns, dependencies[tech_name]):
                # install technology
            else:
                install_with_dependency(pem_key_location, public_dns, dependencies[tech_name])
            # install technology




